include "../std.rs-2"

fn main
    let a, 0
    let b, 1
    let i, 0

    loop
        call print.dec, b
        call sys.print, " "

        ; i += 1
        add 1

        ; (a, b) = (b, a + b)
        push b
        add a, b
        pop a, b
    while i, lt, 100

    call sys.print, "\n"
endfn

fn print.dec, x
    jmp.if x, ge, 0, print.dec.positive
        call sys.print, "-"
        mul -1
    print.dec.positive:

    ; Leave a stop "mark" on the stack.
    ; x -> 10, x
    push x, 10 ; x -> x, x, 10
    pop x ; x, x, 10 -> 10, x
    let x

    ; Split each digit into a stack slot.
    ; 10, abcd -> 10, d, c, b, a
    loop
        div x, 10 ; x -> x, q = x / 10
        rem x, 10 ; x, q -> x, q, r = x % 10
        pop x ; x, q, r -> r, q
        let q
    while q, ne, 0

    drop ; Remove the stop "mark"

    loop
        ; print(digits[digit..digit+1])
        const8 digits, "0123456789"
        add digits
        call sys.print, _, 1

        let top
    while top, lt, 10
endfn
